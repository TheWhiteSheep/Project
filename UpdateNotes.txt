Added: 9/24/2025

UMyBaseWidget / Health System
- Implemented a health bar widget that dynamically updates based on the character’s health.
- Added UpdateHealthBar(float Percent) to handle health percentage and color changes (green → yellow → orange → red depending on health).
- Added OnHealthChangedHandler() to bind the widget to UMyHealthComponent::OnHealthChanged so the UI updates automatically whenever health changes.
- Setup the widget for the locally controlled player only in AMyBaseCharacter::BeginPlay().
- Ensured proper validation for MyHealthComponent and HealthWidgetClass to avoid crashes.

AMyBaseDoor / Door System
- Added: Door and frame models to the project content folder.
- Implemented: Loaded door and frame static mesh assets and applied relative offsets for proper alignment.
- Implemented: DoorFrameMesh as root and set the DoorMesh as child of the DoorFrameMesh.

9/23/2025

UMyBaseMovementComponent
- CrouchedHalfHeight was changed to use the function SetCrouchedHalfHeight() due to API change.

AMyBaseCharacter
- Added OnChangePerspective() function to switch camera perspective between ThirdPerson and FirstPerson.
- Added OnInteract() function to interact with objects using a line trace, based on BaseInteractDistance and CameraDistance.
- Added BaseInteractDistance (default 120.0f in FirstPerson; CameraDistance added in ThirdPerson).
- Added CameraDistance to control camera distance from the character; used in the interact system.

AMyBaseDoor
- Added ClosedRotation and OpenRotation for door states.
- Added bIsOpen to track the door’s current state and enabled replication for networked play.
- Added server-authoritative Server_ToggleDoor() RPC.
- Added OnRep_IsOpen() to start smooth rotation on clients when bIsOpen changes.
- Added GetLifetimeReplicatedProps() to replicate the door’s open state to clients.
- Implemented: Interact_Implementation() and ToggleDoor() to handle opening/closing via players.
- Implemented: UpdateDoorRotation() to smoothly interpolate door rotation using a timer.

9/21/2025
AMyCameraManager
- Provides smooth camera movement while crouching to avoid jerky transitions.

UMyBaseMovementComponent
- Enables crouching by default (NavAgentProps.bCanCrouch).
- Sets crouch height (CrouchedHalfHeight).
- Added explanatory comments.
- Added StartCrouching() and StopCrouching() to manage crouch flags manually.

Fixed
- AMyBasePlayerController automatically adds the input mapping context (IMC_Default) in the constructor, eliminating the need to update it manually in Blueprint.